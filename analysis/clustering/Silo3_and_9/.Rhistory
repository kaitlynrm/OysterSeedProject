install.packages("devtools")
install.packages("devtools")
install.packages("git2r")
install.packages("devtools")
install.packages("devtools")
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
result.kegg <- DAVIDsearch(gene.lists.ex, david.user = "krmitch7@uw.edu", idType="ENTREZ_GENE_ID",annotation="KEGG_PATHWAY")
library(RDAVIDWebService)
library(ggplot2)
library(BACA)
data(gene.lists.ex)
result.kegg <- DAVIDsearch(gene.lists.ex, david.user = "krmitch7@uw.edu", idType="ENTREZ_GENE_ID",annotation="KEGG_PATHWAY")
R CMD javareconf
R CMD javareconf
javareconf
remove.packages(rJava)
install.packages("rJava")
install.packages("rJava")
getwd()
setwd('/Documents/Kaitlyn')
getwd()
setwd('/Documents/Kaitlyn')
getwd()
library(RDAVIDWebService)
install.packages("RDAVIDWebService")
source("https://bioconductor.org/biocLite.R")
biocLite("RDAVIDWebService")
R CMD javareconf
getwd()
source("Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/biostats.R")
system("awk '$1=\"3_\"$1' /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/silo3/silo3.csv >> /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/Silo3_and_9/silo3_9.csv")
system("awk '$1=\"9_\"$1' /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/silo9/silo9.csv >> /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/Silo3_and_9/silo3_9.csv")
setwd("Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/Silo3_and_9/")
silo3.9 <- read.csv(file = "silo3_9.csv")
which(grepl('X9_S9.Protein', silo3.9$Protein)) #should be present
View(silo3.9)
which(grepl('9_S9.Protein', silo3.9$Protein)) #should be present
which(grepl('9_S9-Protein', silo3.9$Protein)) #should be present
which(grepl('Protein', silo3.9$Protein)) #should be present
colnames(silo3.9)[colnames(silo3.9)=="X3_S3.Protein"] <- "Protein"
test <- silo3.9[!grepl('9_S9-Protein', silo3.9$X3_S3.Protein)]
View(test)
which(grepl('9_S9-Protein', silo3.9$Protein)) #should be present
test <- silo3.9[!grepl('9_S9-Protein', silo3.9$Protein)]
test <- silo3.9[!grepl('9_S9-Protein', silo3.9$Protein)]
rm(test)
which(grepl('9_S9-Protein', silo3.9$Protein)) #find row number
test <- silo3.9[-7346]
test <- silo3.9[-7346,]
View(test)
test2 <- silo3.9[-(which(grepl('9_S9-Protein', silo3.9$Protein))),]
View(test2)
system("awk '$1=\"3_\"$1' /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/silo3/silo3.csv >> /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/Silo3_and_9/silo3_9.csv")
system("awk '$1=\"9_\"$1' /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/silo9/silo9.csv >> /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/Silo3_and_9/silo3_9.csv")
colnames(silo3.9)[colnames(silo3.9)=="X3_S3.Protein"] <- "Protein"
setwd("Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/Silo3_and_9/")
getwd()
silo3.9 <- read.csv(file = "silo3_9.csv")
silo3.9 <- silo3.9[-(which(grepl('9_S9-Protein', silo3.9$Protein))),]
?write.csv()
write.csv(silo3.9, file = "silo3_9.csv")
system("awk '$1=\"3_\"$1' /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/silo3/silo3.csv >> /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/Silo3_and_9/silo3_9.csv")
system("awk '$1=\"9_\"$1' /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/silo9/silo9.csv >> /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/Silo3_and_9/silo3_9.csv")
colnames(silo3.9)[colnames(silo3.9)=="X3_S3.Protein"] <- "Protein"
silo3.9 <- read.csv(file = "silo3_9.csv")
silo3.9 <- silo3.9[-(which(grepl('9_S9-Protein', silo3.9$Protein))),]
silo3.9 <- read.csv(file = "silo3_9.csv")
test2 <- silo3.9[-(which(grepl('9_S9-Protein', silo3.9$Protein))),]
which(grepl('9_S9-Protein', silo3.9$Protein
)
)
rm(test2)
View(silo3.9)
which(grepl('9_S9-Protein', silo3.9$Protein
))
colnames(silo3.9)[colnames(silo3.9)=="X3_S3.Protein"] <- "Protein"
which(grepl('9_S9-Protein', silo3.9$Protein))
test2 <- silo3.9[-(which(grepl('9_S9-Protein', silo3.9$Protein))),]
rm(test)
rm(test2)
test <- silo3.9[-(which(grepl('9_S9-Protein', silo3.9$Protein))),]
which(grepl('9_S9-Protein', silo3.9$Protein))
which(grepl('9_S9-Protein', test$Protein))
silo3.9 <- silo3.9[-(which(grepl('9_S9-Protein', silo3.9$Protein))),]
rm(test)
write.csv(silo3.9, file = "silo3_9.csv")
proteins3.9<-subset(silo3.9, grepl(paste('CHOYP', collapse="|"), silo3.9$Protein))
rownames(proteins3_9)<-proteins3_9$SProtein
View(proteins3.9)
prot3.9<-proteins3_9[,2:9]
proteins3_9<-subset(silo3.9, grepl(paste('CHOYP', collapse="|"), silo3.9$Protein))
rm(proteins3.9)
rownames(proteins3_9)<-proteins3_9$SProtein
View(proteins3_9)
proteins3_9<-subset(silo3.9, grepl(paste('CHOYP', collapse="|"), silo3.9$Protein))
rownames(proteins3_9)<-proteins3_9$SProtein
prot3.9<-proteins3_9[,2:9]
View(prot3.9)
proteins3_9<-subset(silo3.9, grepl(paste('CHOYP', collapse="|"), silo3.9$Protein))
rownames(proteins3_9)<-proteins3_9$Protein
View(proteins3_9)
prot3_9<-proteins3_9[,2:9]
r,(prot3.9)
rm(prot3.9)
rm(proteins3_9)
rm(prot3_9)
proteins3_9<-subset(silo3.9, grepl(paste('CHOYP', collapse="|"), silo3.9$Protein))
rownames(proteins3_9)<-proteins3_9$Protein
View(proteins3_9)
silo3_9<-proteins3_9[,2:9]
View(silo3_9)
which(grepl('ALBU_BOVIN', silo3_9$Protein))
which(grepl('ALBU_BOVIN', silo3.9$Protein))
test <- (names(silo3_9) <- c("3", "5", "7", "9", "11", "13", "15")
#ensure contaminants are gone
which(grepl('ALBU_BOVIN', silo3_9$Protein))
###begin old code###
#use bray-curtis dissimilarity for clustering
library(vegan)
nsaf.bray<-vegdist(silo3_9, method='bray')
#average clustering method to cluster the data
library(cluster)
clust.avg<-hclust(nsaf.bray, method='average')
plot(clust.avg)
coef.hclust(clust.avg)
#coeff of ~1 means clusters are distinct and dissimilar from each other (silo3_9 = "Error in coef.hclust(clust.avg) : !is.unsorted(ht) is not TRUE")
#cophenetic correlation
#how well cluster hierarchy represents original object-by-object dissimilarity space
cor(nsaf.bray, cophenetic(clust.avg))
#I think you want this to be close-ish to 1 (silo3_9 = 0.7411092)
#Scree plot
hclus.scree(clust.avg)
jpeg(filename = "s3_9_scree.jpeg", width = 1000, height = 1000)
hclus.scree(clust.avg)
dev.off()
#Look for the elbow/inflection point on the scree plot and you can estimate number of clusters. But  it seems that this information cannot be pulled from the scree plot. (less than 500, maybe around 300?)
#cut dendrogram at selected height (example is given for 0.5) based on what looks reasonable because SCIENCE
plot(clust.avg)
rect.hclust(clust.avg, h=0.8)
jpeg(filename = "s3_9_dendrogram.jpeg", width = 1000, height = 1000)
plot(clust.avg)
rect.hclust(clust.avg, h=0.8)
dev.off()
#this looks reasonable
clust.class<-cutree(clust.avg, h=0.8)
max(clust.class)
#Cluster Freq table
silo3_9.freq <- data.frame(table(clust.class))
#Make df
silo3_9.clus <- data.frame(clust.class)
names <- rownames(silo3_9.clus)
silo3_9.clus <- cbind(names, silo3_9.clus)
rownames(silo3_9.clus) <- NULL
colnames(silo3_9.clus)[1] <- "S3_9.Protein"
colnames(silo3_9.clus)[2] <- "Cluster"
#silo3_9.all <- merge(silo3_9.clus, silo3_9.detected, by.x = "Protein", by.y = "X")
#this gives matrix of 2 columns, first with proteins second with cluster assignment
#Line plots for each cluster
library(ggthemes)
library(reshape)
library(ggplot2)
melted_all_s3_9<-melt(silo3_9.all, id.vars=c('Protein', 'Cluster'))
ggplot(melted_all_s3_9, aes(x=variable, y=value, group=Protein)) +geom_line(alpha=0.1) + theme_bw() +
facet_wrap(~Cluster, scales='free_y') + labs(x='Time Point', y='Normalized Spectral Abundance Factor')
jpeg(filename = "silo3_9clus_lineplots.jpeg", width = 1000, height = 1000)
ggplot(melted_all_s3_9, aes(x=variable, y=value, group=Protein)) +geom_line(alpha=0.1) + theme_bw() +
facet_wrap(~Cluster, scales='free_y') + labs(x='Time Point', y='Normalized Spectral Abundance Factor')
dev.off()
#Merge Silo clusters with Silo annotated and tagged datasheet
#library(silo3_9_annotated)
silo3_9.annotated <- read.csv("silo3_9_annotated.csv")
silo3_9.final <- merge(silo3_9.clus, silo3_9.annotated, by.x = "Protein", by.y = "Protein")
write.csv(silo3_9.final, file = "silo3_9-anno_clus")
write.csv(silo3_9.freq, file = "silo3_9-clus_freq")
test <- (names(silo3_9) <- c("3", "5", "7", "9", "11", "13", "15"))
names(silo3_9) <- c("3", "5", "7", "9", "11", "13", "15")
View(silo3_9)
names(silo3_9) <- c("0", "3", "5", "7", "9", "11", "13", "15")
getwd()
source("../biostats.R")
write.csv(silo3.9, file = "silo3_9.csv")
write.csv(silo3_9, file = "silo3_9.csv")
library(vegan)
install.packages("vegan")
library(vegan)
nsaf.bray<-vegdist(silo3_9, method='bray')
library(cluster)
clust.avg<-hclust(nsaf.bray, method='average')
plot(clust.avg)
coef.hclust(clust.avg)
system("awk '$1=\"3_\"$1' /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/silo3/silo3.csv >> /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/Silo3_and_9/silo3_9.csv")
system("awk '$1=\"9_\"$1' /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/silo9/silo9.csv >> /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/Silo3_and_9/silo3_9.csv")
colnames(silo3.9)[colnames(silo3.9)=="X3_S3.Protein"] <- "Protein"
silo3.9 <- read.csv(file = "silo3_9.csv")
silo3.9 <- silo3.9[-(which(grepl('9_S9-Protein', silo3.9$Protein))),]
proteins3_9<-subset(silo3.9, grepl(paste('CHOYP', collapse="|"), silo3.9$Protein))
write.csv(silo3.9, file = "silo3_9")
system("awk '$1=\"3_\"$1' /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/silo3/silo3.csv >> /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/Silo3_and_9/silo3_9.csv")
system("awk '$1=\"9_\"$1' /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/silo9/silo9.csv >> /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/Silo3_and_9/silo3_9.csv")
colnames(silo3.9)[colnames(silo3.9)=="X3_S3.Protein"] <- "Protein"
colnames(silo3.9)[colnames(silo3.9)=="X3_S3.Protein"] <- "Protein"
silo3.9 <- read.csv(file = "silo3_9.csv")
colnames(silo3.9)[colnames(silo3.9)=="X3_S3.Protein"] <- "Protein"
silo3.9 <- silo3.9[-(which(grepl('9_S9-Protein', silo3.9$Protein))),]
write.csv(silo3.9, file = "silo3_9.csv")
proteins3_9<-subset(silo3.9, grepl(paste('CHOYP', collapse="|"), silo3.9$Protein))
which(grepl('ALBU_BOVIN', silo3_9$Protein)) #ensure contaminants are gone
which(grepl('ALBU_BOVIN', proteins3_9$Protein)) #ensure contaminants are gone
rownames(proteins3_9)<-proteins3_9$Protein
silo3_9<-proteins3_9[,2:9]
names(silo3_9) <- c("0", "3", "5", "7", "9", "11", "13", "15")
write.csv(silo3_9, file = "silo3_9-edited.csv")
source("../biostats.R")
library(vegan)
nsaf.bray<-vegdist(silo3_9, method='bray')
library(cluster)
clust.avg<-hclust(nsaf.bray, method='average')
plot(clust.avg)
coef.hclust(clust.avg)
test <- read.csv(file = "silo3_9-edited-copied_saved.csv")
library(vegan)
nsaf.bray<-vegdist(test, method='bray')
test <- read.csv(file = "silo3_9-edited-copied_saved.csv", row.names = 1)
View(test)
nsaf.bray<-vegdist(test, method='bray')
clust.avg<-hclust(nsaf.bray, method='average')
coef.hclust(clust.avg)
silo3_9 <- read.csv(file = "silo3_9.csv")
proteins3_9<-subset(silo3.9, grepl(paste('CHOYP', collapse="|"), silo3.9$Protein))
silo3.9 <- read.csv(file = "silo3_9.csv")
rm(silo3_9)
proteins3_9<-subset(silo3.9, grepl(paste('CHOYP', collapse="|"), silo3.9$Protein))
which(grepl('ALBU_BOVIN', proteins3_9$Protein)) #ensure contaminants are gone
rownames(proteins3_9)<-proteins3_9$Protein
silo3_9<-proteins3_9[,2:9]
names(silo3_9) <- c("0", "3", "5", "7", "9", "11", "13", "15")
system("awk '$1=\"3_\"$1' /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/silo3/silo3.csv >> /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/Silo3_and_9/silo3_9.csv")
system("awk '$1=\"9_\"$1' /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/silo9/silo9.csv >> /home/srlab/Documents/Kaitlyn/Github/OysterSeedProject/analysis/kmeans/Silo3_and_9/silo3_9.csv")
silo3.9 <- read.csv(file = "silo3_9.csv")
colnames(silo3.9)[colnames(silo3.9)=="X3_S3.Protein"] <- "Protein"
silo3.9 <- silo3.9[-(which(grepl('9_S9-Protein', silo3.9$Protein))),]
proteins3_9<-subset(silo3.9, grepl(paste('CHOYP', collapse="|"), silo3.9$Protein))
which(grepl('ALBU_BOVIN', proteins3_9$Protein)) #ensure contaminants are gone
rownames(proteins3_9)<-proteins3_9$Protein
silo3_9<-proteins3_9[,2:9]
names(silo3_9) <- c("0", "3", "5", "7", "9", "11", "13", "15")
write.csv(silo3_9, file = "silo3_9-edited.csv")
source("../biostats.R")
library(vegan)
nsaf.bray<-vegdist(silo3_9, method='bray')
library(cluster)
clust.avg<-hclust(nsaf.bray, method='average')
coef.hclust(clust.avg)
coef.hclust(clust.avg)
